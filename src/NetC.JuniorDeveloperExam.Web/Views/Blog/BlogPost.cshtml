@using NetC.JuniorDeveloperExam.Web.Models
@model NetC.JuniorDeveloperExam.Web.Models.Blogpost
@{
    ViewBag.Title = Model.title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var modelId = Model.id;
}
<div class="row">
    <div class="col-lg-12">
        <h1 class="mt-4"><a href="@Url.Action("BlogPost", "Blog", new { id = Model.id })">@Model.title</a></h1>
        <hr>
        <p>Posted on @Model.date</p>
        <hr>
        <img src="@Model.image" />
        <hr>
        <p>@Html.Raw(Model.htmlContent)</p>
    </div>
    <hr>
    <div class="card my-4">
        <h5 class="card-header">Leave a Comment:</h5>
        <div class="card-body">
            @using (Html.BeginForm("AddComment", "Blog", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.id)
                <div class="form-row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.comment.name, "Name")
                        @Html.EditorFor(model => model.comment.name, new { htmlAttributes = new { @class = "form-control", placeholder = "Name" } })
                        @Html.ValidationMessageFor(model => model.comment.name, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.comment.emailAddress, "Email Address")
                        @Html.EditorFor(model => model.comment.emailAddress, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                        @Html.ValidationMessageFor(model => model.comment.emailAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.comment.message, "Comment")
                    @Html.TextAreaFor(model => model.comment.message, new { @class = "form-control", rows = "3" })
                    @Html.ValidationMessageFor(model => model.comment.message, "", new { @class = "text-danger" })
                </div>



                <button type="submit" class="btn btn-primary">Submit</button>
            }
        </div>
    </div>
    <hr>
<div class="col-lg-12">
    <h2 class="mt-4">Comments</h2>
    <hr>
    
    

    @if (Model.comments != null && Model.comments.Any())
    {
        for (int i = 0; i < Model.comments.Count; i++)
        {
            if (Model.comments[i].name != null)
            {
                string avatarName = Model.comments[i].name;
                string replaceName = Model.comments[i].name.Replace(" ", "+");
                var avatarUrlwithoutSpace = $"https://eu.ui-avatars.com/api/?name={avatarName}";
                var avatarUrlwithSpace = $"https://eu.ui-avatars.com/api/?name={replaceName}";
                var avatarUrl = avatarName.Contains(" ") ? avatarUrlwithSpace : avatarUrlwithoutSpace;

                <div class="media mb-4">
                    <img class="d-flex mr-3 rounded-circle user-avatar" src="@avatarUrl" alt="@Model.comments[i].name">
                    <div class="media-body">
                        <h5 class="mt-0">@Model.comments[i].name <small><em>(@Model.comments[i].date)</em></small></h5>
                        @Html.Raw(Model.comments[i].message)
                    </div>
                    <!-- Reply Button -->
                    <button class="btn btn-primary" onclick="showReplyForm(this, @Model.comments[i].CommentId)">Reply</button>
                </div>
                        <!-- Reply Form -->
                <div class="card my-4 reply-box d-none" id="@("Reply"+Model.comments[i].CommentId)">
                    <h4 class="card-header">Leave a Reply:</h4>
                    <div class="card-body">
                        <!-- Start the form for each reply -->
                        @using (Html.BeginForm("AddReply", "Blog", new { id = Model.id, commentId = Model.comments[i].CommentId }, FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            <!-- To keep track of which comment this reply belongs to -->
                            @Html.HiddenFor(m => m.comments[i].CommentId)
                            <div class="form-row">
                                <div class="form-group col-md-6">
                                    <label id=@("NameLabel"+i) for="Name">Name</label>
                                    <input aria-labelledby=@("NameLabel"+i) @*id=@("Name"+i)*@ required class="form-control" name="Name" placeholder="Name">
                                </div>
                                <div class="form-group col-md-6">
                                    <label id=@("EmailLabel"+i) for="Email">Email</label>
                                    <input aria-labelledby=@("EmailLabel"+i) @*id=@("Email"+i)*@ required type="Email" class="form-control" name="Email" placeholder="Email">
                                </div>
                            </div>

                            <div class="form-group">
                                <label id=@("MessageLabel"+i) for="Message">Message</label>
                                <textarea aria-labelledby=@("MessageLabel"+i) required @*id="Message"*@ name="Message" class="form-control" rows="3"></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary">Reply</button>
                        }
                    </div>
                </div>
                        

            if (Model.comments[i].replies != null && Model.comments[i].replies.Any())
            {
                foreach (var reply in Model.comments[i].replies)
                {
                    {
                        <div style="padding-left: 1.25em">
                            <div class="media mb-4">
                                <img class="d-flex mr-3 rounded-circle user-avatar" src=@("https://eu.ui-avatars.com/api/?name=" + reply.name.Replace(" ", "+")) alt="@reply.name">
                                <div class="media-body">
                                    <h5 class="mt-0">@reply.name <small><em>(@reply.date)</em></small></h5>
                                    @reply.message
                                </div>
                            </div>
                        </div>
                    }
                }
            }
        }
    }

}
</div>
</div>

<script type="text/javascript">
    function showReplyForm(button, commentId) {
        // Find the corresponding reply form for the button that was clicked
        var replyForm = document.getElementById('Reply' + commentId);

        // Toggle the 'd-none' class which controls the visibility of the form
        if (replyForm.classList.contains('d-none')) {
            replyForm.classList.remove('d-none');
            button.textContent = "Cancel"; // Change button text to 'Cancel'
        } else {
            replyForm.classList.add('d-none');
            button.textContent = "Reply"; // Change button text back to 'Reply'
        }
    }
</script>